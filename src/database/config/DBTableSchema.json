{
    "id": "EmailTable",
    "definitions": [
        {
            "name": "$$defItemName$$",
            "description": "$$defItemDesc$$",
            "type": "class",
            "onlyHeader": true,
            "$defItems": [
                {
                    "defItemName": "EmailTable",
                    "defItemDesc": "Email table handles email service related config load/store operations",
                    "defItemArg": "email_config_table",
                    "defItemAddress": "EMAIL_CONFIG_TABLE_ADDRESS",
                    "defItemExtVar": "__email_table"
                },
                {
                    "defItemName": "GlobalTable",
                    "defItemDesc": "Global table handles global config load/store operations",
                    "defItemArg": "global_config_table",
                    "defItemAddress": "GLOBAL_CONFIG_TABLE_ADDRESS",
                    "defItemExtVar": "__global_table"
                },
                {
                    "defItemName": "DeviceIotTable",
                    "defItemDesc": "DeviceIot table handles iot configs load/store operations",
                    "defItemArg": "device_iot_config_table",
                    "defItemAddress": "DEVICE_IOT_CONFIG_TABLE_ADDRESS",
                    "defItemExtVar": "__device_iot_table"
                },
                {
                    "defItemName": "GpioTable",
                    "defItemDesc": "GPIO table handles GPIO configs load/store operations",
                    "defItemArg": "gpio_config_table",
                    "defItemAddress": "GPIO_CONFIG_TABLE_ADDRESS",
                    "defItemExtVar": "__gpio_table"
                },
                {
                    "defItemName": "LoginTable",
                    "defItemDesc": "Login table handles credential configs load/store operations",
                    "defItemArg": "login_credential_table",
                    "defItemAddress": "LOGIN_CREDENTIAL_TABLE_ADDRESS",
                    "defItemExtVar": "__login_table"
                },
                {
                    "defItemName": "MqttGeneralTable",
                    "defItemDesc": "MqttGeneral table handles general configs load/store operations",
                    "defItemArg": "mqtt_general_config_table",
                    "defItemAddress": "MQTT_GENERAL_CONFIG_TABLE_ADDRESS",
                    "defItemExtVar": "__mqtt_general_table"
                },
                {
                    "defItemName": "MqttLwtTable",
                    "defItemDesc": "Mqtt Lwt table handles LWT configs load/store operations",
                    "defItemArg": "mqtt_lwt_config_table",
                    "defItemAddress": "MQTT_LWT_CONFIG_TABLE_ADDRESS",
                    "defItemExtVar": "__mqtt_lwt_table"
                },
                {
                    "defItemName": "MqttPubSubTable",
                    "defItemDesc": "Mqtt PubSub table handles publish & subscribe topic configs load/store operations",
                    "defItemArg": "mqtt_pubsub_config_table",
                    "defItemAddress": "MQTT_PUBSUB_CONFIG_TABLE_ADDRESS",
                    "defItemExtVar": "__mqtt_pubsub_table"
                },
                {
                    "defItemName": "OtaTable",
                    "defItemDesc": "OTA table handles ota server configs load/store operations",
                    "defItemArg": "ota_config_table",
                    "defItemAddress": "OTA_CONFIG_TABLE_ADDRESS",
                    "defItemExtVar": "__ota_table"
                },
                {
                    "defItemName": "WiFiTable",
                    "defItemDesc": "Wifi table handles wifi configs load/store operations",
                    "defItemArg": "wifi_config_table",
                    "defItemAddress": "WIFI_CONFIG_TABLE_ADDRESS",
                    "defItemExtVar": "__wifi_table"
                }
            ],
            "includes": [
                "<database/core/DatabaseTable.h>"
            ],
            "parent": {
                "name": "DatabaseTable",
                "type": "template",
                "access": "public",
                "template": {
                    "isDeclaration": false,
                    "args": [
                        "$$defItemArg$$"
                    ]
                }
            },
            "members": [
                {
                    "type": "constructor",
                    "access": "public",
                    "description": "Constructor"
                },
                {
                    "type": "destructor",
                    "access": "public",
                    "description": "Destructor"
                },
                {
                    "name": "boot",
                    "type": "method",
                    "access": "public",
                    "description": "register table to database.",
                    "returnType": "void",
                    "args": [],
                    "body": "    this->register_table( $$defItemAddress$$ );"
                },
                {
                    "name": "get",
                    "type": "method",
                    "access": "public",
                    "description": "get/fetch table from database.",
                    "returnType": "bool",
                    "args": [
                        {
                            "name": "_table",
                            "type": "$$defItemArg$$*"
                        }
                    ],
                    "body": "    return this->get_table( _table, $$defItemAddress$$ );"
                },
                {
                    "name": "set",
                    "type": "method",
                    "access": "public",
                    "description": "set table from database.",
                    "returnType": "bool",
                    "args": [
                        {
                            "name": "_table",
                            "type": "$$defItemArg$$*"
                        }
                    ],
                    "body": "    return this->set_table( _table, $$defItemAddress$$ );"
                },
                {
                    "name": "clear",
                    "type": "method",
                    "access": "public",
                    "description": "clear table in database.",
                    "returnType": "void",
                    "args": [],
                    "body": "    this->clear_table( $$defItemAddress$$ );"
                }
            ],
            "postclassdeclaration":[
                {
                    "name": "$$defItemExtVar$$",
                    "preprop": "extern ",
                    "type": "$$defItemName$$"
                }
            ]
        }
    ]
}